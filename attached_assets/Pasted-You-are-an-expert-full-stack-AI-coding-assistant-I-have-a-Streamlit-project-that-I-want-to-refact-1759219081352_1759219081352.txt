You are an expert full-stack AI coding assistant. 
I have a Streamlit project that I want to refactor into a **React frontend + FastAPI backend**. 
But before the refactor, I need you to analyze the code.

### Step 1: Analyze Project
- Scan through all my Python files.
- List every **function, class, and module** found in the project.
- Mark which functions are **actually used** in the app (connected to logic/UI).
- Identify and remove any **unused functions, imports, or redundant code**.

### Step 2: Backend Refactor (FastAPI)
- Move **all active functions and logic** into a FastAPI backend.
- Expose REST API endpoints for each function (e.g., `/scan`, `/analyze`, `/predict`, `/report`).
- Organize backend into:
  - `main.py`
  - `routers/`
  - `services/`
  - `utils/`
- Ensure no unused or duplicate code remains.

### Step 3: Frontend Refactor (React)
- Replace all Streamlit UI with a **React frontend**.
- Use **TailwindCSS + Framer Motion** for animations:
  - Page transitions (fade/slide).
  - Hover animations on buttons/icons (pulse/scale).
  - Animated loaders while waiting for backend responses.
  - Toast notifications for success/error.
- Keep **same input/output flow** as original Streamlit app.
- Frontend communicates with FastAPI using `axios`.

### Step 4: Integration
- FastAPI backend runs on port **5000**.
- React frontend runs on port **3000**.
- Example API call:
  ```javascript
  const response = await axios.post("http://localhost:5000/scan", { data });
Ensure consistent data format with original project.

Step 5: Deliverables
Clean final project structure:

bash
Copy code
/frontend   -> React + Tailwind + Framer Motion
/backend    -> FastAPI with all active functions
Full function inventory report (used vs. unused).

Running instructions:

npm run dev for React

uvicorn main:app --reload --port 5000 for FastAPI

Provide Dockerfiles for both frontend and backend.

‚ö†Ô∏è Important:

Do NOT change my logic, only migrate the UI + refactor.

Delete unused functions or imports.

Code must be modular, production-ready, and well-documented.

pgsql
Copy code

---

This way the AI will **first audit your functions**, then build a **clean React + FastAPI app** only with the necessary parts.  

üëâ Do you want me to also add an **auto-generated function map** step (like a Python script that lis